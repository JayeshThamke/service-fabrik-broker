// Code generated by MockGen. DO NOT EDIT.
// Source: provisioner.go

// Package mock_provisioner is a generated GoMock package.
package mock_provisioner

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/apps/v1"
	reflect "reflect"
)

// MockProvisioner is a mock of Provisioner interface
type MockProvisioner struct {
	ctrl     *gomock.Controller
	recorder *MockProvisionerMockRecorder
}

// MockProvisionerMockRecorder is the mock recorder for MockProvisioner
type MockProvisionerMockRecorder struct {
	mock *MockProvisioner
}

// NewMockProvisioner creates a new mock instance
func NewMockProvisioner(ctrl *gomock.Controller) *MockProvisioner {
	mock := &MockProvisioner{ctrl: ctrl}
	mock.recorder = &MockProvisionerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProvisioner) EXPECT() *MockProvisionerMockRecorder {
	return m.recorder
}

// FetchStatefulset mocks base method
func (m *MockProvisioner) FetchStatefulset() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchStatefulset")
	ret0, _ := ret[0].(error)
	return ret0
}

// FetchStatefulset indicates an expected call of FetchStatefulset
func (mr *MockProvisionerMockRecorder) FetchStatefulset() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchStatefulset", reflect.TypeOf((*MockProvisioner)(nil).FetchStatefulset))
}

// GetStatefulSet mocks base method
func (m *MockProvisioner) GetStatefulSet() *v1.StatefulSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatefulSet")
	ret0, _ := ret[0].(*v1.StatefulSet)
	return ret0
}

// GetStatefulSet indicates an expected call of GetStatefulSet
func (mr *MockProvisionerMockRecorder) GetStatefulSet() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatefulSet", reflect.TypeOf((*MockProvisioner)(nil).GetStatefulSet))
}
