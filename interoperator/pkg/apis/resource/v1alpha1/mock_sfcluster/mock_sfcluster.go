// Code generated by MockGen. DO NOT EDIT.
// Source: sfcluster_types.go

// Package mock_v1alpha1 is a generated GoMock package.
package mock_v1alpha1

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	rest "k8s.io/client-go/rest"
	reflect "reflect"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// MockSFClusterInterface is a mock of SFClusterInterface interface
type MockSFClusterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSFClusterInterfaceMockRecorder
}

// MockSFClusterInterfaceMockRecorder is the mock recorder for MockSFClusterInterface
type MockSFClusterInterfaceMockRecorder struct {
	mock *MockSFClusterInterface
}

// NewMockSFClusterInterface creates a new mock instance
func NewMockSFClusterInterface(ctrl *gomock.Controller) *MockSFClusterInterface {
	mock := &MockSFClusterInterface{ctrl: ctrl}
	mock.recorder = &MockSFClusterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSFClusterInterface) EXPECT() *MockSFClusterInterfaceMockRecorder {
	return m.recorder
}

// GetNamespace mocks base method
func (m *MockSFClusterInterface) GetNamespace() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNamespace")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetNamespace indicates an expected call of GetNamespace
func (mr *MockSFClusterInterfaceMockRecorder) GetNamespace() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNamespace", reflect.TypeOf((*MockSFClusterInterface)(nil).GetNamespace))
}

// SetNamespace mocks base method
func (m *MockSFClusterInterface) SetNamespace(namespace string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetNamespace", namespace)
}

// SetNamespace indicates an expected call of SetNamespace
func (mr *MockSFClusterInterfaceMockRecorder) SetNamespace(namespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetNamespace", reflect.TypeOf((*MockSFClusterInterface)(nil).SetNamespace), namespace)
}

// GetName mocks base method
func (m *MockSFClusterInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockSFClusterInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockSFClusterInterface)(nil).GetName))
}

// SetName mocks base method
func (m *MockSFClusterInterface) SetName(name string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetName", name)
}

// SetName indicates an expected call of SetName
func (mr *MockSFClusterInterfaceMockRecorder) SetName(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetName", reflect.TypeOf((*MockSFClusterInterface)(nil).SetName), name)
}

// GetGenerateName mocks base method
func (m *MockSFClusterInterface) GetGenerateName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenerateName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetGenerateName indicates an expected call of GetGenerateName
func (mr *MockSFClusterInterfaceMockRecorder) GetGenerateName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenerateName", reflect.TypeOf((*MockSFClusterInterface)(nil).GetGenerateName))
}

// SetGenerateName mocks base method
func (m *MockSFClusterInterface) SetGenerateName(name string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetGenerateName", name)
}

// SetGenerateName indicates an expected call of SetGenerateName
func (mr *MockSFClusterInterfaceMockRecorder) SetGenerateName(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetGenerateName", reflect.TypeOf((*MockSFClusterInterface)(nil).SetGenerateName), name)
}

// GetUID mocks base method
func (m *MockSFClusterInterface) GetUID() types.UID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUID")
	ret0, _ := ret[0].(types.UID)
	return ret0
}

// GetUID indicates an expected call of GetUID
func (mr *MockSFClusterInterfaceMockRecorder) GetUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUID", reflect.TypeOf((*MockSFClusterInterface)(nil).GetUID))
}

// SetUID mocks base method
func (m *MockSFClusterInterface) SetUID(uid types.UID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetUID", uid)
}

// SetUID indicates an expected call of SetUID
func (mr *MockSFClusterInterfaceMockRecorder) SetUID(uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUID", reflect.TypeOf((*MockSFClusterInterface)(nil).SetUID), uid)
}

// GetResourceVersion mocks base method
func (m *MockSFClusterInterface) GetResourceVersion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceVersion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetResourceVersion indicates an expected call of GetResourceVersion
func (mr *MockSFClusterInterfaceMockRecorder) GetResourceVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceVersion", reflect.TypeOf((*MockSFClusterInterface)(nil).GetResourceVersion))
}

// SetResourceVersion mocks base method
func (m *MockSFClusterInterface) SetResourceVersion(version string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetResourceVersion", version)
}

// SetResourceVersion indicates an expected call of SetResourceVersion
func (mr *MockSFClusterInterfaceMockRecorder) SetResourceVersion(version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetResourceVersion", reflect.TypeOf((*MockSFClusterInterface)(nil).SetResourceVersion), version)
}

// GetGeneration mocks base method
func (m *MockSFClusterInterface) GetGeneration() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGeneration")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetGeneration indicates an expected call of GetGeneration
func (mr *MockSFClusterInterfaceMockRecorder) GetGeneration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGeneration", reflect.TypeOf((*MockSFClusterInterface)(nil).GetGeneration))
}

// SetGeneration mocks base method
func (m *MockSFClusterInterface) SetGeneration(generation int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetGeneration", generation)
}

// SetGeneration indicates an expected call of SetGeneration
func (mr *MockSFClusterInterfaceMockRecorder) SetGeneration(generation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetGeneration", reflect.TypeOf((*MockSFClusterInterface)(nil).SetGeneration), generation)
}

// GetSelfLink mocks base method
func (m *MockSFClusterInterface) GetSelfLink() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSelfLink")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSelfLink indicates an expected call of GetSelfLink
func (mr *MockSFClusterInterfaceMockRecorder) GetSelfLink() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSelfLink", reflect.TypeOf((*MockSFClusterInterface)(nil).GetSelfLink))
}

// SetSelfLink mocks base method
func (m *MockSFClusterInterface) SetSelfLink(selfLink string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSelfLink", selfLink)
}

// SetSelfLink indicates an expected call of SetSelfLink
func (mr *MockSFClusterInterfaceMockRecorder) SetSelfLink(selfLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSelfLink", reflect.TypeOf((*MockSFClusterInterface)(nil).SetSelfLink), selfLink)
}

// GetCreationTimestamp mocks base method
func (m *MockSFClusterInterface) GetCreationTimestamp() v1.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreationTimestamp")
	ret0, _ := ret[0].(v1.Time)
	return ret0
}

// GetCreationTimestamp indicates an expected call of GetCreationTimestamp
func (mr *MockSFClusterInterfaceMockRecorder) GetCreationTimestamp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreationTimestamp", reflect.TypeOf((*MockSFClusterInterface)(nil).GetCreationTimestamp))
}

// SetCreationTimestamp mocks base method
func (m *MockSFClusterInterface) SetCreationTimestamp(timestamp v1.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCreationTimestamp", timestamp)
}

// SetCreationTimestamp indicates an expected call of SetCreationTimestamp
func (mr *MockSFClusterInterfaceMockRecorder) SetCreationTimestamp(timestamp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCreationTimestamp", reflect.TypeOf((*MockSFClusterInterface)(nil).SetCreationTimestamp), timestamp)
}

// GetDeletionTimestamp mocks base method
func (m *MockSFClusterInterface) GetDeletionTimestamp() *v1.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeletionTimestamp")
	ret0, _ := ret[0].(*v1.Time)
	return ret0
}

// GetDeletionTimestamp indicates an expected call of GetDeletionTimestamp
func (mr *MockSFClusterInterfaceMockRecorder) GetDeletionTimestamp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeletionTimestamp", reflect.TypeOf((*MockSFClusterInterface)(nil).GetDeletionTimestamp))
}

// SetDeletionTimestamp mocks base method
func (m *MockSFClusterInterface) SetDeletionTimestamp(timestamp *v1.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDeletionTimestamp", timestamp)
}

// SetDeletionTimestamp indicates an expected call of SetDeletionTimestamp
func (mr *MockSFClusterInterfaceMockRecorder) SetDeletionTimestamp(timestamp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDeletionTimestamp", reflect.TypeOf((*MockSFClusterInterface)(nil).SetDeletionTimestamp), timestamp)
}

// GetDeletionGracePeriodSeconds mocks base method
func (m *MockSFClusterInterface) GetDeletionGracePeriodSeconds() *int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeletionGracePeriodSeconds")
	ret0, _ := ret[0].(*int64)
	return ret0
}

// GetDeletionGracePeriodSeconds indicates an expected call of GetDeletionGracePeriodSeconds
func (mr *MockSFClusterInterfaceMockRecorder) GetDeletionGracePeriodSeconds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeletionGracePeriodSeconds", reflect.TypeOf((*MockSFClusterInterface)(nil).GetDeletionGracePeriodSeconds))
}

// SetDeletionGracePeriodSeconds mocks base method
func (m *MockSFClusterInterface) SetDeletionGracePeriodSeconds(arg0 *int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDeletionGracePeriodSeconds", arg0)
}

// SetDeletionGracePeriodSeconds indicates an expected call of SetDeletionGracePeriodSeconds
func (mr *MockSFClusterInterfaceMockRecorder) SetDeletionGracePeriodSeconds(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDeletionGracePeriodSeconds", reflect.TypeOf((*MockSFClusterInterface)(nil).SetDeletionGracePeriodSeconds), arg0)
}

// GetLabels mocks base method
func (m *MockSFClusterInterface) GetLabels() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLabels")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetLabels indicates an expected call of GetLabels
func (mr *MockSFClusterInterfaceMockRecorder) GetLabels() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLabels", reflect.TypeOf((*MockSFClusterInterface)(nil).GetLabels))
}

// SetLabels mocks base method
func (m *MockSFClusterInterface) SetLabels(labels map[string]string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLabels", labels)
}

// SetLabels indicates an expected call of SetLabels
func (mr *MockSFClusterInterfaceMockRecorder) SetLabels(labels interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLabels", reflect.TypeOf((*MockSFClusterInterface)(nil).SetLabels), labels)
}

// GetAnnotations mocks base method
func (m *MockSFClusterInterface) GetAnnotations() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnnotations")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetAnnotations indicates an expected call of GetAnnotations
func (mr *MockSFClusterInterfaceMockRecorder) GetAnnotations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnnotations", reflect.TypeOf((*MockSFClusterInterface)(nil).GetAnnotations))
}

// SetAnnotations mocks base method
func (m *MockSFClusterInterface) SetAnnotations(annotations map[string]string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetAnnotations", annotations)
}

// SetAnnotations indicates an expected call of SetAnnotations
func (mr *MockSFClusterInterfaceMockRecorder) SetAnnotations(annotations interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAnnotations", reflect.TypeOf((*MockSFClusterInterface)(nil).SetAnnotations), annotations)
}

// GetInitializers mocks base method
func (m *MockSFClusterInterface) GetInitializers() *v1.Initializers {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInitializers")
	ret0, _ := ret[0].(*v1.Initializers)
	return ret0
}

// GetInitializers indicates an expected call of GetInitializers
func (mr *MockSFClusterInterfaceMockRecorder) GetInitializers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInitializers", reflect.TypeOf((*MockSFClusterInterface)(nil).GetInitializers))
}

// SetInitializers mocks base method
func (m *MockSFClusterInterface) SetInitializers(initializers *v1.Initializers) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetInitializers", initializers)
}

// SetInitializers indicates an expected call of SetInitializers
func (mr *MockSFClusterInterfaceMockRecorder) SetInitializers(initializers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetInitializers", reflect.TypeOf((*MockSFClusterInterface)(nil).SetInitializers), initializers)
}

// GetFinalizers mocks base method
func (m *MockSFClusterInterface) GetFinalizers() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFinalizers")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetFinalizers indicates an expected call of GetFinalizers
func (mr *MockSFClusterInterfaceMockRecorder) GetFinalizers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFinalizers", reflect.TypeOf((*MockSFClusterInterface)(nil).GetFinalizers))
}

// SetFinalizers mocks base method
func (m *MockSFClusterInterface) SetFinalizers(finalizers []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetFinalizers", finalizers)
}

// SetFinalizers indicates an expected call of SetFinalizers
func (mr *MockSFClusterInterfaceMockRecorder) SetFinalizers(finalizers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFinalizers", reflect.TypeOf((*MockSFClusterInterface)(nil).SetFinalizers), finalizers)
}

// GetOwnerReferences mocks base method
func (m *MockSFClusterInterface) GetOwnerReferences() []v1.OwnerReference {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOwnerReferences")
	ret0, _ := ret[0].([]v1.OwnerReference)
	return ret0
}

// GetOwnerReferences indicates an expected call of GetOwnerReferences
func (mr *MockSFClusterInterfaceMockRecorder) GetOwnerReferences() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOwnerReferences", reflect.TypeOf((*MockSFClusterInterface)(nil).GetOwnerReferences))
}

// SetOwnerReferences mocks base method
func (m *MockSFClusterInterface) SetOwnerReferences(arg0 []v1.OwnerReference) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetOwnerReferences", arg0)
}

// SetOwnerReferences indicates an expected call of SetOwnerReferences
func (mr *MockSFClusterInterfaceMockRecorder) SetOwnerReferences(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetOwnerReferences", reflect.TypeOf((*MockSFClusterInterface)(nil).SetOwnerReferences), arg0)
}

// GetClusterName mocks base method
func (m *MockSFClusterInterface) GetClusterName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetClusterName indicates an expected call of GetClusterName
func (mr *MockSFClusterInterfaceMockRecorder) GetClusterName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterName", reflect.TypeOf((*MockSFClusterInterface)(nil).GetClusterName))
}

// SetClusterName mocks base method
func (m *MockSFClusterInterface) SetClusterName(clusterName string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetClusterName", clusterName)
}

// SetClusterName indicates an expected call of SetClusterName
func (mr *MockSFClusterInterfaceMockRecorder) SetClusterName(clusterName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetClusterName", reflect.TypeOf((*MockSFClusterInterface)(nil).SetClusterName), clusterName)
}

// GetKubeConfig mocks base method
func (m *MockSFClusterInterface) GetKubeConfig(c client.Client) (*rest.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKubeConfig", c)
	ret0, _ := ret[0].(*rest.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKubeConfig indicates an expected call of GetKubeConfig
func (mr *MockSFClusterInterfaceMockRecorder) GetKubeConfig(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKubeConfig", reflect.TypeOf((*MockSFClusterInterface)(nil).GetKubeConfig), c)
}
